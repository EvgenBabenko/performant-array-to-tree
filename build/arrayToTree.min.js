"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,a=1,i=arguments.length;a<i;a++)for(var t in r=arguments[a])Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t]);return e}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0});var defaultConfig={id:"id",parentId:"parentId",dataField:"data",childrenField:"children"};function arrayToTree(e,r){var a,i,t;void 0===r&&(r={});for(var n=__assign(__assign({},defaultConfig),r),d=[],l={},s=0,o=e;s<o.length;s++){var c=o[s],p=c[n.id],h=c[n.parentId];Object.prototype.hasOwnProperty.call(l,p)||(l[p]=((a={})[n.childrenField]=[],a)),n.dataField?l[p][n.dataField]=c:l[p]=__assign(__assign({},c),((i={})[n.childrenField]=l[p][n.childrenField],i));var _=l[p];null==h?d.push(_):(Object.prototype.hasOwnProperty.call(l,h)||(l[h]=((t={})[n.childrenField]=[],t)),l[h][n.childrenField].push(_))}return d}exports.arrayToTree=arrayToTree;